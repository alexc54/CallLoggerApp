"""init

Revision ID: 59e4ff7d2405
Revises: 
Create Date: 2024-10-29 14:45:05.842476

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '59e4ff7d2405'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.alter_column('customer_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('account_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('postcode',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.alter_column('reason_called',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=150),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=150),
               nullable=True)

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.alter_column('reason_called',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('postcode',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.alter_column('account_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('customer_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    # ### end Alembic commands ###
